# SPDX-FileCopyrightText: 2020-2022 The Trustix Authors
#
# SPDX-License-Identifier: CC0-1.0

name: "Build and populate cache"
on:
  pull_request:
  push:
    branches:
      - main
      - master
  schedule:
    # rebuild everyday at 2:51
    # TIP: Choose a random time here so not all repositories are build at once:
    # https://www.random.org/clock-times/?num=1&earliest=01%3A00&latest=08%3A00&interval=5&format=html&rnd=new
    - cron:  '35 2 * * *'

jobs:

  matrix_generate:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
      matrix_passthru: ${{ steps.set-matrix-passthru.outputs.matrix_passthru }}
    steps:
      - uses: actions/checkout@v4
      - uses: cachix/install-nix-action@v23
        with:
          nix_path: nixpkgs=channel:nixos-unstable
      - id: set-matrix
        run: |
          set -euo pipefail
          matrix="$(nix-instantiate --eval --json --expr 'builtins.attrNames (import ./ci.nix {}).cachePkgs' | jq -rcM '{attr: ., os: ["ubuntu-latest"]}')"
          echo "matrix_passthru=$matrix" >> $GITHUB_OUTPUT
      - id: set-matrix-passthru
        run: |
          set -euo pipefail
          matrix="$(nix-instantiate --eval --json .github/passthru.nix | jq -r | jq -rcM '{attr: ., os: ["ubuntu-latest"]}')"
          echo "matrix_passthru=$matrix" >> $GITHUB_OUTPUT

  builds:
    needs: matrix_generate
    runs-on: ${{ matrix.os }}
    strategy:
      matrix: ${{fromJSON(needs.matrix_generate.outputs.matrix)}}
    steps:
      - uses: actions/checkout@v4
      - uses: cachix/install-nix-action@v23
        with:
          nix_path: nixpkgs=channel:nixos-unstable
      - uses: DeterminateSystems/magic-nix-cache-action@main
      - uses: cachix/cachix-action@v12
        with:
          name: cfeeley
          authToken: '${{ secrets.CACHIX_AUTH_TOKEN }}'
      - name: Show nixpkgs version
        run: nix-instantiate --eval -E '(import <nixpkgs> {}).lib.version'
      - name: Check evaluation
        run: |
          nix-env -f . -qa \* --meta --json \
            --allowed-uris https://static.rust-lang.org \
            --option restrict-eval true \
            --option allow-import-from-derivation true \
            --drv-path --show-trace \
            -I nixpkgs=$(nix-instantiate --find-file nixpkgs) \
            -I $PWD
      - name: Build nix packages
        run: nix shell -f '<nixpkgs>' nix-build-uncached -c nix-build-uncached -build-flags "-L" --keep-going --show-trace ./. -A ${{ matrix.attr }}
      - name: Trigger NUR update
        run: curl -XPOST "https://nur-update.nix-community.org/update?repo=${{ matrix.nurRepo }}"

  # builds_passthru:
  #   needs: [matrix_generate, builds]
  #   runs-on: ${{ matrix.os }}
  #   strategy:
  #     matrix: ${{fromJSON(needs.matrix_generate.outputs.matrix_passthru)}}
  #   steps:
  #     - uses: actions/checkout@v4
  #     - uses: cachix/install-nix-action@v23
  #       with:
  #         nix_path: nixpkgs=channel:nixos-unstable
  #     - uses: cachix/cachix-action@v12
  #       with:
  #         name: cfeeley
  #         authToken: '${{ secrets.CACHIX_AUTH_TOKEN }}'
  #     - run: nix shell -f '<nixpkgs>' nix-build-uncached -c nix-build-uncached -build-flags "-L" --keep-going --show-trace ./. -A ${{ matrix.attr }}
